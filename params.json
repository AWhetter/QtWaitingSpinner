{"name":"Qtwaitingspinner","tagline":"configurable custom Qt widget for showing waiting spinner icon","body":"QtWaitingSpinner\r\n================\r\n\r\nThis is configurable custom Qt widget for showing waiting spinner icon.\r\n\r\nHow it looks?\r\n=============\r\n\r\nSome spinners with different parameters: \r\n\r\n![waiting spinner](https://raw.github.com/snowwlex/QtWaitingSpinner/gh-pages/waiting-spinners.gif)\r\n\r\nConfiguration\r\n================\r\n\r\nFollowing parameters can be used for configuration:\r\n\r\n*   Main\r\n  *   Number of lines\r\n  *   Length of lines\r\n  *   Width of lines\r\n  *   Radius of circle\r\n*   Additional \r\n  *   \"Roundness\" \r\n  *   Color \r\n  *   Speed (in rounds per second)\r\n  *   \"Trail\" parameter\r\n  *   Opacity\r\n  \r\nCode usage\r\n==========\r\n\r\nMinimum code that is needed to write for using spinner:\r\n```\r\n\tQtWaitingSpinner* spinner = new QtWaitingSpinner(10,7,3,5);\r\n\tspinner->start(); // starts spinning\r\n```\r\n\r\nMain parameters are setted in constructor. This is a widget, that can be placed anywhere.\r\n\r\nMain and additional parameters can be setted like that:\r\n```\r\n  spinner->setLinesNumber(10);\r\n  spinner->setSpeed(1.5);\r\n  spinner->setColor(QColor(255,0,0));\r\n```\r\n\r\nFor example:\r\n```\r\n\tQVBoxLayout *layout = new QVBoxLayout;\r\n\tQtWaitingSpinner* spinner = new QtWaitingSpinner(10,7,3,5);\r\n\tspinner->setSpeed(1.5);\r\n\tlayout->addWidget(spinner);\r\n\tsetLayout(layout);\r\n\tspinner->start();\r\n```\r\n\r\nThanks\r\n======\r\n\r\nThe spinner is inspired by [spin.js](http://fgnass.github.io/spin.js/)  project. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}